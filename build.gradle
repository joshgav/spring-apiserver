#! /usr/bin/env groovy

plugins {
    id 'maven-publish'
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
}

group 'com.joshgav'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = 17
    targetCompatibility = 17
}

repositories {
    maven {
        url "https://repo.spring.io/milestone"
    }
    maven {
        url "https://repo.spring.io/snapshot"
    }
    maven {
        url "https://repo.spring.io/release"
    }
    mavenLocal()
    mavenCentral()
}

dependencies {
    // BOMs
    implementation platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
    annotationProcessor platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
    implementation platform("org.springframework.data:spring-data-bom:${springDataVersion}")
    implementation platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
    implementation platform("com.fasterxml.jackson:jackson-bom:${jacksonVersion}")
    implementation platform("io.micrometer:micrometer-bom:${micrometerVersion}")
    implementation platform("org.junit:junit-bom:${junitVersion}")

    // Spring starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client-all'

    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.opentelemetry:opentelemetry-api'
    implementation 'org.postgresql:postgresql'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    implementation 'org.slf4j:slf4j-api'
    implementation 'ch.qos.logback:logback-classic'

    implementation "io.swagger.core.v3:swagger-annotations:${swaggerAnnotationsVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation "io.zonky.test:embedded-database-spring-test:${zonkyVersion}"
    testImplementation "io.zonky.test:embedded-postgres:${zonkyPostgresVersion}"
    testImplementation platform("io.zonky.test.postgres:embedded-postgres-binaries-bom:${embeddedPostgresVersion}")
    testImplementation 'io.zonky.test.postgres:embedded-postgres-binaries-linux-amd64'

    testImplementation "com.google.guava:guava:${guavaVersion}-jre"
}

configurations {
    compileOnly.extendsFrom annotationProcessor
}

test {
    useJUnitPlatform()
}